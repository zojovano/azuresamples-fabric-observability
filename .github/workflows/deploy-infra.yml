name: Deploy Azure Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'infra/Bicep/**'
      - 'infra/kql-definitions/**'
      - '.github/workflows/deploy-infra.yml'
  workflow_dispatch:
    inputs:
      location:
        description: 'Azure region for deployment'
        required: false
        default: 'swedencentral'
        type: string

env:
  LOCATION: ${{ github.event.inputs.location || 'swedencentral' }}
  RESOURCE_GROUP_NAME: 'azuresamples-platformobservabilty-fabric'

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    name: Validate Bicep Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate Bicep files
        run: |
          cd infra/Bicep
          az bicep build --file main.bicep
          echo "Bicep files validated successfully"

  deploy-infra:
    name: Deploy Azure Resources
    needs: validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Bicep
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./infra/Bicep/main.bicep
          parameters: >
            location=${{ env.LOCATION }}
            adminObjectId=${{ secrets.ADMIN_OBJECT_ID }}
          deploymentName: 'github-${{ github.run_number }}'
          scope: subscription
          region: ${{ env.LOCATION }}
          failOnStdErr: false

      - name: Debug deployment parameters
        run: |
          echo "Location: ${{ env.LOCATION }}"
          echo "Admin Object ID is set: ${{ secrets.ADMIN_OBJECT_ID != '' }}"
          echo "Subscription ID is set: ${{ secrets.AZURE_SUBSCRIPTION_ID != '' }}"

  deploy-fabric-artifacts:
    name: Deploy Fabric Artifacts
    needs: deploy-infra
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Microsoft Fabric CLI
        run: |
          echo "Installing Microsoft Fabric CLI..."
          pip install ms-fabric-cli
          fab --version

      - name: Deploy Fabric Artifacts
        run: |
          echo "Deploying Fabric artifacts using Fabric CLI..."
          
          # Set environment variables for the deployment script
          export FABRIC_WORKSPACE_NAME="fabric-otel-workspace"
          export FABRIC_DATABASE_NAME="otelobservabilitydb"
          export RESOURCE_GROUP_NAME="${{ env.RESOURCE_GROUP_NAME }}"
          export LOCATION="${{ env.LOCATION }}"
          
          # Make script executable and run
          chmod +x ./infra/deploy-fabric-artifacts.sh
          ./infra/deploy-fabric-artifacts.sh

  report-status:
    name: Report Deployment Status
    needs: [deploy-infra, deploy-fabric-artifacts]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Report status
        run: |
          if [ "${{ needs.deploy-infra.result }}" == "success" ] && [ "${{ needs.deploy-fabric-artifacts.result }}" == "success" ]; then
            echo "✅ Deployment completed successfully"
          else
            echo "❌ Deployment failed"
            exit 1
          fi
